// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PI06.Data.Context;

namespace PI06.Data.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20191001232103_teste")]
    partial class teste
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PI06.Data.Models.Entity.Cirurgia", b =>
                {
                    b.Property<int>("Id");

                    b.Property<DateTime?>("DtAlteracao");

                    b.Property<DateTime>("DtInclusao");

                    b.Property<string>("descricao")
                        .IsRequired();

                    b.HasKey("Id")
                        .HasName("IdCirurgiaProcedimento");

                    b.ToTable("Cirurgia");
                });

            modelBuilder.Entity("PI06.Data.Models.Entity.Consulta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdConsulta")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DtAlteracao");

                    b.Property<DateTime>("DtInclusao");

                    b.Property<int>("IdPaciente");

                    b.Property<DateTime>("dataInicio");

                    b.Property<DateTime?>("dataTermino")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(null);

                    b.Property<string>("diagnostico")
                        .IsRequired();

                    b.Property<string>("medicacao")
                        .IsRequired();

                    b.HasKey("Id")
                        .HasName("IdConsulta");

                    b.HasIndex("IdPaciente");

                    b.ToTable("Consulta");
                });

            modelBuilder.Entity("PI06.Data.Models.Entity.Exame", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("IdExame");

                    b.Property<DateTime?>("DtAlteracao");

                    b.Property<DateTime>("DtInclusao");

                    b.Property<int?>("consultasId");

                    b.Property<string>("resultado")
                        .IsRequired();

                    b.Property<int?>("tipoExameId");

                    b.HasKey("Id")
                        .HasName("IdExame");

                    b.HasIndex("consultasId");

                    b.HasIndex("tipoExameId");

                    b.ToTable("Exame");
                });

            modelBuilder.Entity("PI06.Data.Models.Entity.Procedimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idProcedimento")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DtAlteracao");

                    b.Property<DateTime>("DtInclusao");

                    b.Property<int?>("TipoProcedimentoId");

                    b.Property<int>("idProcedimento")
                        .HasColumnName("Procedimento_idProcedimento");

                    b.Property<string>("observacao")
                        .IsRequired();

                    b.HasKey("Id")
                        .HasName("IdProcedimento");

                    b.HasIndex("TipoProcedimentoId");

                    b.HasIndex("idProcedimento");

                    b.ToTable("Procedimento");
                });

            modelBuilder.Entity("PI06.Data.Models.Entity.TipoExame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdtipoExame")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired();

                    b.Property<DateTime?>("DtAlteracao");

                    b.Property<DateTime>("DtInclusao");

                    b.Property<string>("ResultadoReferencia")
                        .IsRequired();

                    b.HasKey("Id")
                        .HasName("IdTipoExame");

                    b.ToTable("TipoExame");
                });

            modelBuilder.Entity("PI06.Data.Models.Entity.TipoProcedimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdtipoProcedimento")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DtAlteracao");

                    b.Property<DateTime>("DtInclusao");

                    b.Property<string>("descricao")
                        .IsRequired();

                    b.HasKey("Id")
                        .HasName("IdtipoProcedimento");

                    b.ToTable("TipoProcedimento");
                });

            modelBuilder.Entity("PI06.Models.Entity.Cargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IDCargo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescricaoCargo")
                        .IsRequired();

                    b.Property<DateTime?>("DtAlteracao");

                    b.Property<DateTime>("DtInclusao");

                    b.Property<bool>("IsHealthProfession");

                    b.HasKey("Id")
                        .HasName("IDCargo");

                    b.ToTable("Cargo");
                });

            modelBuilder.Entity("PI06.Models.Entity.Conselho", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("IdConselho");

                    b.Property<string>("DescricaoConselho")
                        .IsRequired();

                    b.Property<DateTime?>("DtAlteracao");

                    b.Property<DateTime>("DtInclusao");

                    b.Property<int?>("NumeroConselho")
                        .IsRequired();

                    b.HasKey("Id")
                        .HasName("IdConselho");

                    b.ToTable("Conselho");
                });

            modelBuilder.Entity("PI06.Models.Entity.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("IdFuncionario");

                    b.Property<DateTime>("DataContratacao");

                    b.Property<DateTime?>("DataDemissao")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(null);

                    b.Property<DateTime?>("DtAlteracao");

                    b.Property<DateTime>("DtInclusao");

                    b.Property<int>("IdCargo");

                    b.HasKey("Id")
                        .HasName("IdFuncionario");

                    b.HasIndex("IdCargo");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("PI06.Models.Entity.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DtAlteracao");

                    b.Property<DateTime>("DtInclusao");

                    b.HasKey("Id");

                    b.ToTable("Paciente");
                });

            modelBuilder.Entity("PI06.Models.Entity.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdPessoa")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .IsRequired();

                    b.Property<long>("CepCod");

                    b.Property<string>("Cidade")
                        .IsRequired();

                    b.Property<long>("CodigoCpf");

                    b.Property<string>("Complemento");

                    b.Property<int>("DDD");

                    b.Property<DateTime>("DataNascimento");

                    b.Property<DateTime?>("DtAlteracao");

                    b.Property<DateTime>("DtInclusao");

                    b.Property<string>("EnderecoEmail")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("Logradouro")
                        .IsRequired();

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<string>("NumeroEndereco")
                        .IsRequired();

                    b.Property<long>("NumeroTelefone");

                    b.Property<string>("Rg")
                        .IsRequired();

                    b.Property<int>("Sus");

                    b.Property<int>("Uf");

                    b.HasKey("Id")
                        .HasName("IdPessoa");

                    b.ToTable("Pessoa");
                });

            modelBuilder.Entity("PI06.Models.Entity.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("IdUsuario");

                    b.Property<DateTime?>("DtAlteracao");

                    b.Property<DateTime>("DtInclusao");

                    b.Property<string>("Login")
                        .IsRequired();

                    b.Property<byte[]>("Senha")
                        .IsRequired();

                    b.Property<Guid>("TokenAlteracaoDeSenha");

                    b.HasKey("Id")
                        .HasName("IdUsuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("PI06.Data.Models.Entity.Cirurgia", b =>
                {
                    b.HasOne("PI06.Data.Models.Entity.Procedimento", "procedimento")
                        .WithOne("cirurgia")
                        .HasForeignKey("PI06.Data.Models.Entity.Cirurgia", "Id")
                        .HasConstraintName("PFK_ProcedimentoCirurgia")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("PI06.Data.Models.Entity.Consulta", b =>
                {
                    b.HasOne("PI06.Models.Entity.Funcionario", "Funcionario")
                        .WithOne("consulta")
                        .HasForeignKey("PI06.Data.Models.Entity.Consulta", "Id")
                        .HasConstraintName("FK_FuncionarioConsulta")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PI06.Models.Entity.Paciente", "Paciente")
                        .WithMany("Prontuarios")
                        .HasForeignKey("IdPaciente")
                        .HasConstraintName("FK_PacienteConsulta")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("PI06.Data.Models.Entity.Exame", b =>
                {
                    b.HasOne("PI06.Data.Models.Entity.Procedimento", "procedimento")
                        .WithOne("exame")
                        .HasForeignKey("PI06.Data.Models.Entity.Exame", "Id")
                        .HasConstraintName("PFK_ProcedimentoExame")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PI06.Data.Models.Entity.Consulta", "consultas")
                        .WithMany("exames")
                        .HasForeignKey("consultasId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PI06.Data.Models.Entity.TipoExame", "tipoExame")
                        .WithMany("exames")
                        .HasForeignKey("tipoExameId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("PI06.Data.Models.Entity.Procedimento", b =>
                {
                    b.HasOne("PI06.Data.Models.Entity.TipoProcedimento", "TipoProcedimento")
                        .WithMany("Procedimentos")
                        .HasForeignKey("TipoProcedimentoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PI06.Data.Models.Entity.Consulta", "consulta")
                        .WithMany("procedimentos")
                        .HasForeignKey("idProcedimento")
                        .HasConstraintName("FK_Consulta")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("PI06.Models.Entity.Conselho", b =>
                {
                    b.HasOne("PI06.Models.Entity.Funcionario", "Funcionario")
                        .WithOne("Conselho")
                        .HasForeignKey("PI06.Models.Entity.Conselho", "Id")
                        .HasConstraintName("PFK_PessoaFuncionarioConselho")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("PI06.Models.Entity.Funcionario", b =>
                {
                    b.HasOne("PI06.Models.Entity.Pessoa", "Pessoa")
                        .WithOne("Funcionario")
                        .HasForeignKey("PI06.Models.Entity.Funcionario", "Id")
                        .HasConstraintName("PFK_PessoaFuncionario")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PI06.Models.Entity.Cargo", "Cargo")
                        .WithMany("Funcionarios")
                        .HasForeignKey("IdCargo")
                        .HasConstraintName("FK_Cargo")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("PI06.Models.Entity.Usuario", b =>
                {
                    b.HasOne("PI06.Models.Entity.Funcionario", "Funcionario")
                        .WithOne("Usuario")
                        .HasForeignKey("PI06.Models.Entity.Usuario", "Id")
                        .HasConstraintName("PFK_PessoaFuncionarioUsuario")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
